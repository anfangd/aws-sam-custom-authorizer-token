AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS SAM Application about APIGateway Custom Authorizer
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  FirebaseSAProjectId:
    Type: String
    Description: Firebase Service Account Project ID
    Default: default_project_id
  FirebaseSAPrivateKeyId:
    Type: String
    Description: Firebase Service Account Private Key ID
    Default: default_private_key_id
  FirebaseSAPrivateKey:
    Type: String
    Description: Firebase Service Account Private Key
    Default: default_private_key
  FirebaseSAClientEmail:
    Type: String
    Description: Firebase Service Account Client Email
    Default: default_client_email
  FirebaseSAClientId:
    Type: String
    Description: Firebase Service Account Client ID
    Default: default_client_id
  FirebaseSACX509CertUrl:
    Type: String
    Description: Firebase Service Account Client x509 cert url
    Default: default_cx509_cert_url

Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: MyLambdaTokenAuthorizer
        Authorizers:
          MyLambdaTokenAuthorizer:
            FunctionArn: !GetAtt MyAuthFunction.Arn
            # NOTE: Additional options:
            # FunctionInvokeRole: !Ref MyRole
            # Identity:
              # Header: Auth
              # ValidationExpression: Bearer.*
              # ReauthorizeEvery: 30 # seconds
  MyHelloPublicFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./functions/hello-public/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref MyApi
            Path: /public
            Method: get
            Auth:
              Authorizer: NONE

  MyHelloPrivateFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: ./functions/hello-private/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            RestApiId: !Ref MyApi
            Path: /private
            Method: get

  MyAuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./functions/apigateway-authorizer/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Environment:
        Variables:
          FIREBASE_SA_PROJECT_ID: !Ref FirebaseSAProjectId
          FIREBASE_SA_PRIVATE_KEY_ID: !Ref FirebaseSAPrivateKeyId
          FIREBASE_SA_PRIVATE_KEY: !Ref FirebaseSAPrivateKey
          FIREBASE_SA_CLIENT_EMAIL: !Ref FirebaseSAClientEmail
          FIREBASE_SA_CLIENT_ID: !Ref FirebaseSAClientId
          FIREBASE_SA_CX509_CERT_URL: !Ref FirebaseSACX509CertUrl
            
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  #HelloPublicApi:
  #  Description: "API Gateway endpoint URL for Prod stage for Hello Public|Private function"
  #  Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  MyHelloPublicFunction:
    Description: "Hello Public Lambda Function ARN"
    Value: !GetAtt MyHelloPublicFunction.Arn
  MyHelloPublicFunctionIamRole:
    Description: "Implicit IAM Role created for Hello Public function"
    Value: !GetAtt MyHelloPublicFunctionRole.Arn
  MyHelloPrivateFunction:
    Description: "Hello Private Lambda Function ARN"
    Value: !GetAtt MyHelloPrivateFunction.Arn
  MyHelloPrivateFunctionIamRole:
    Description: "Implicit IAM Role created for Hello Private function"
    Value: !GetAtt MyHelloPrivateFunctionRole.Arn
